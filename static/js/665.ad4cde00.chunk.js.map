{"version":3,"file":"static/js/665.ad4cde00.chunk.js","mappings":"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","sources":["webpack://spirify/./src/components/RegisterForm.module.scss?07f9","components/RegisterForm.tsx","pages/RegisterPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"RegisterForm_formContainer__nsxNh\",\"registerForm\":\"RegisterForm_registerForm__SljLz\",\"ant-form-item\":\"RegisterForm_ant-form-item__4MHrC\",\"ant-form-item-control-input-content\":\"RegisterForm_ant-form-item-control-input-content__EEGz+\",\"ant-btn\":\"RegisterForm_ant-btn__gudH9\"};","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Spin } from \"antd\";\r\nimport styles from \"./RegisterForm.module.scss\";\r\n\r\ninterface RegisterFormProps {\r\n\tonSubmit: (values: {\r\n\t\tusername: string;\r\n\t\tpassword: string;\r\n\t\temail: string;\r\n\t}) => Promise<boolean>;\r\n}\r\n\r\nexport const RegisterForm: React.FC<RegisterFormProps> = ({ onSubmit }) => {\r\n\tconst [form] = Form.useForm();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: {\r\n\t\tusername: string;\r\n\t\temail: string;\r\n\t\tpassword: string;\r\n\t}) => {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tawait onSubmit(values);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.formContainer}>\r\n\t\t\t<Form form={form} className={styles.registerForm} onFinish={handleSubmit}>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\trules={[{ required: true, message: \"Please input your username!\" }]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: \"Please input your email!\",\r\n\t\t\t\t\t\t\ttype: \"email\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\trules={[{ required: true, message: \"Please input your password!\" }]}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\tname=\"confirm\"\r\n\t\t\t\t\tdependencies={[\"password\"]}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: \"Please confirm your password!\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t({ getFieldValue }) => ({\r\n\t\t\t\t\t\t\tvalidator(_, value) {\r\n\t\t\t\t\t\t\t\tif (!value || getFieldValue(\"password\") === value) {\r\n\t\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn Promise.reject(\r\n\t\t\t\t\t\t\t\t\tnew Error(\"The two passwords that you entered do not match!\")\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" disabled={isLoading}>\r\n\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\tLoading...\r\n\t\t\t\t\t\t\t\t<Spin />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<span>Register</span>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"context/AuthContext\";\r\nimport { RegisterForm } from \"components/RegisterForm\";\r\nimport { message } from \"antd\";\r\nconst RegisterPage: React.FC = () => {\r\n\tconst navigate = useNavigate();\r\n\tconst { register, login } = useContext(AuthContext)!;\r\n\r\n\tconst handleSubmit = async (values: {\r\n\t\tusername: string;\r\n\t\temail: string;\r\n\t\tpassword: string;\r\n\t}) => {\r\n\t\tconst registerSuccess = await register(\r\n\t\t\tvalues.username,\r\n\t\t\tvalues.email,\r\n\t\t\tvalues.password\r\n\t\t);\r\n\t\tif (registerSuccess) {\r\n\t\t\tconst loginSuccess = await login(values.username, values.password, false);\r\n\t\t\tif (loginSuccess) {\r\n\t\t\t\tmessage.success(\"Registration successful! You are now logged in.\");\r\n\t\t\t\tnavigate(\"/profile\"); // or wherever you want to redirect users after login\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tmessage.error(\"Registration successful, but login failed.\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmessage.error(\"Registration failed!\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\treturn <RegisterForm onSubmit={handleSubmit} />;\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["RegisterForm","_ref","onSubmit","_Form$useForm","Form","form","_slicedToArray","_useState","useState","_useState2","isLoading","setIsLoading","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","finish","stop","_x","apply","arguments","_jsx","className","styles","children","_jsxs","onFinish","label","name","rules","required","message","Input","type","hasFeedback","dependencies","_ref3","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Button","htmlType","disabled","Spin","navigate","useNavigate","useContext","AuthContext","register","login","username","email","password","sent","abrupt"],"sourceRoot":""}