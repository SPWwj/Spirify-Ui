{"version":3,"file":"static/js/171.ff1dbfea.chunk.js","mappings":"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","sources":["services/UploadService.ts","components/UploadComponent.tsx","components/BaseFormComponent.tsx","webpack://spirify/./src/pages/dashboard/SharingFormPage.module.scss?d153","pages/dashboard/SharingFormPage.tsx","services/SharingService.ts"],"sourcesContent":["// UploadService.ts\r\nimport ApiManager from './ApiManager';\r\n\r\nclass UploadService {\r\n    static async uploadFile(file: File) {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        const response = await ApiManager.getInstance().getAxiosInstance().post('/api/Upload', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    }\r\n\r\n    static async deleteFile(fullUrl: string) {\r\n        const filePath = fullUrl.replace(ApiManager.BASE_URL, \"\");\r\n\r\n        const response = await ApiManager.getInstance().getAxiosInstance().delete(`/api/upload?filePath=${filePath}`);\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default UploadService;\r\n","import { Button, Upload } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { useState } from \"react\";\r\nimport UploadService from \"services/UploadService\";\r\n\r\ninterface UploadComponentProps {\r\n\tform: any; // Replace `any` with the correct type\r\n\tfieldName: string; // Replace `any` with the correct type\r\n}\r\n\r\n// Define your own type for the custom request options\r\ninterface CustomRequestOptions {\r\n\tfile: File;\r\n\tonProgress: (event: { percent: number }) => void;\r\n\tonSuccess: (response: any, file: File | Blob) => void;\r\n\tonError: (error: any) => void;\r\n}\r\n\r\nexport const UploadComponent: React.FC<UploadComponentProps> = ({\r\n\tform,\r\n\tfieldName,\r\n}) => {\r\n\tconst [filePath, setFilePath] = useState<string | null>(null);\r\n\r\n\tconst handleUploadChange = (info: any) => {\r\n\t\tif (info.file.status === \"done\") {\r\n\t\t\tconst filePath = info.file.response.filePath;\r\n\t\t\tsetFilePath(filePath);\r\n\t\t\tform.setFieldsValue({ [fieldName]: filePath });\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDelete = async () => {\r\n\t\ttry {\r\n\t\t\tif (filePath) {\r\n\t\t\t\tawait UploadService.deleteFile(filePath);\r\n\t\t\t\tsetFilePath(null);\r\n\t\t\t\tform.setFieldsValue({ [fieldName]: null });\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst customRequest = async ({\r\n\t\tfile,\r\n\t\tonProgress,\r\n\t\tonSuccess,\r\n\t\tonError,\r\n\t}: CustomRequestOptions) => {\r\n\t\ttry {\r\n\t\t\t// Upload the file\r\n\t\t\tconst response = await UploadService.uploadFile(file);\r\n\r\n\t\t\t// Call onSuccess with the response\r\n\t\t\tonSuccess(response, file);\r\n\t\t} catch (error) {\r\n\t\t\t// Call onError with the error\r\n\t\t\tonError(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Upload\r\n\t\t\tname=\"logo\"\r\n\t\t\tcustomRequest={customRequest as any}\r\n\t\t\tlistType=\"picture\"\r\n\t\t\tonRemove={handleDelete}\r\n\t\t\tonChange={handleUploadChange}\r\n\t\t>\r\n\t\t\t<Button icon={<UploadOutlined />}>Click to upload</Button>\r\n\t\t</Upload>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport {\r\n\tForm,\r\n\tInput,\r\n\tDatePicker,\r\n\tCheckbox,\r\n\tButton,\r\n\tInputNumber,\r\n\tTimePicker,\r\n} from \"antd\";\r\nimport { UploadComponent } from \"./UploadComponent\";\r\n\r\nexport interface FieldProps {\r\n\tname: string;\r\n\tlabel: string;\r\n\trules?: any[];\r\n\ttype?:\r\n\t\t| \"input\"\r\n\t\t| \"textarea\"\r\n\t\t| \"date\"\r\n\t\t| \"checkbox\"\r\n\t\t| \"number\"\r\n\t\t| \"time\"\r\n\t\t| \"datetime\"\r\n\t\t| \"image\"\r\n\t\t| \"object\";\r\n\tvalue?: any;\r\n\tfields?: FieldProps[];\r\n}\r\n\r\ninterface BaseFormProps {\r\n\tfields: FieldProps[];\r\n\tonFinish: (values: any) => void;\r\n\tinitialValues?: Record<string, any>;\r\n}\r\n\r\nconst BaseFormComponent: React.FC<BaseFormProps> = ({\r\n\tfields,\r\n\tonFinish,\r\n\tinitialValues,\r\n}) => {\r\n\tconst [form] = Form.useForm();\r\n\r\n\tconst renderField = (field: FieldProps, fieldName?: string[]) => {\r\n\t\tconst fieldKey = fieldName ? [...fieldName, field.name] : [field.name];\r\n\t\tlet fieldInput;\r\n\r\n\t\tswitch (field.type) {\r\n\t\t\tcase \"textarea\":\r\n\t\t\t\tfieldInput = <Input.TextArea />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"date\":\r\n\t\t\t\tfieldInput = <DatePicker format=\"YYYY-MM-DD\" showTime={false} />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"checkbox\":\r\n\t\t\t\tfieldInput = <Checkbox />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"number\":\r\n\t\t\t\tfieldInput = <InputNumber />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"time\":\r\n\t\t\t\tfieldInput = <TimePicker />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"datetime\":\r\n\t\t\t\tfieldInput = <DatePicker showTime />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"image\":\r\n\t\t\t\tfieldInput = (\r\n\t\t\t\t\t<Form.Item valuePropName=\"fileList\" extra=\"Image Preview\">\r\n\t\t\t\t\t\t<UploadComponent form={form} fieldName={field.name} />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tfieldInput = <Input />;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Form.Item\r\n\t\t\t\tkey={fieldKey.join(\".\")}\r\n\t\t\t\tname={fieldKey}\r\n\t\t\t\tlabel={field.label}\r\n\t\t\t\trules={field.rules}\r\n\t\t\t>\r\n\t\t\t\t{fieldInput}\r\n\t\t\t</Form.Item>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderFields = (fields: FieldProps[], fieldName?: string[]) => {\r\n\t\treturn fields.map((field) =>\r\n\t\t\tfield.type === \"object\" && field.fields\r\n\t\t\t\t? field.fields.map((subField) =>\r\n\t\t\t\t\t\trenderField(\r\n\t\t\t\t\t\t\tsubField,\r\n\t\t\t\t\t\t\tfieldName ? [...fieldName, field.name] : [field.name]\r\n\t\t\t\t\t\t)\r\n\t\t\t\t  )\r\n\t\t\t\t: renderField(field, fieldName)\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tform={form}\r\n\t\t\tlayout=\"vertical\"\r\n\t\t\tonFinish={onFinish}\r\n\t\t\tinitialValues={initialValues}\r\n\t\t\tencType=\"multipart/form-data\"\r\n\t\t>\r\n\t\t\t{renderFields(fields)}\r\n\t\t\t<Form.Item>\r\n\t\t\t\t<div style={{ textAlign: \"right\" }}>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default BaseFormComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sharingFormPage\":\"SharingFormPage_sharingFormPage__JwLUw\",\"avatarUploader\":\"SharingFormPage_avatarUploader__xlCLW\",\"avatarPreview\":\"SharingFormPage_avatarPreview__fu4zM\"};","// AddSharingPage.tsx\r\nimport React from \"react\";\r\nimport { Typography, message } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./SharingFormPage.module.scss\";\r\nimport BaseFormComponent, { FieldProps } from \"components/BaseFormComponent\";\r\nimport { SharingItem } from \"./SharingDetailPage\";\r\nimport sharingService from \"services/SharingService\";\r\n\r\ntype FormValues = Omit<\r\n\tSharingItem,\r\n\t\"ownerName\" | \"ownerId\" | \"borrowerId\" | \"borrowerName\" | \"isAvaliable\"\r\n>;\r\n\r\nconst SharingFormPage: React.FC = () => {\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst onFinish = async (values: FormValues) => {\r\n\t\tconsole.log(\"Received values of form: \", values);\r\n\t\ttry {\r\n\t\t\tawait sharingService.createItem(values);\r\n\t\t\tnavigate(`/dashboard/sharing/`);\r\n\t\t} catch (error) {\r\n\t\t\tmessage.error(\"An error occurred while creating the sharing item:\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst threeDPrinterFormValues: FormValues = {\r\n\t\tname: \"3D Printer\",\r\n\t\taddress: \"789 Oak St, Springfield\",\r\n\t\tdescription: \"An efficient 3D printer in excellent working condition.\",\r\n\t\toverview:\r\n\t\t\t\"This 3D printer is suitable for both beginners and experienced users. It supports a wide range of printing materials and provides high quality, precise prints. Ideal for prototyping, small production runs, and educational projects.\",\r\n\t\ttype: \"Technology\",\r\n\t\tfee: 40,\r\n\t};\r\n\r\n\tconst fields: FieldProps[] = [\r\n\t\t{\r\n\t\t\tname: \"name\",\r\n\t\t\tlabel: \"Name\",\r\n\t\t\trules: [{ required: true, message: \"Please input the item name!\" }],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"image\",\r\n\t\t\tlabel: \"Image\",\r\n\t\t\ttype: \"image\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"overview\",\r\n\t\t\tlabel: \"Overview\",\r\n\t\t\trules: [{ required: true, message: \"Please input the item Overview!\" }],\r\n\t\t\ttype: \"textarea\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"description\",\r\n\t\t\tlabel: \"Description\",\r\n\t\t\ttype: \"textarea\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"type\",\r\n\t\t\tlabel: \"Type\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"fee\",\r\n\t\t\tlabel: \"Fee\",\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className={styles.sharingFormPage}>\r\n\t\t\t<Typography.Title>Add a new Sharing Item</Typography.Title>\r\n\t\t\t<BaseFormComponent\r\n\t\t\t\tfields={fields}\r\n\t\t\t\tonFinish={onFinish}\r\n\t\t\t\tinitialValues={threeDPrinterFormValues}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SharingFormPage;\r\n","import ApiManager from \"./ApiManager\";\r\n\r\nclass SharingService {\r\n    private axiosInstance: any;\r\n\r\n    constructor() {\r\n        this.axiosInstance = ApiManager.getInstance().getAxiosInstance();\r\n    }\r\n\r\n    async createItem(values: any) {\r\n        const response = await this.axiosInstance.post('/api/Sharing', values);\r\n        return response.data;\r\n    }\r\n    async getSharingItem(id: string) {\r\n        const response = await this.axiosInstance.get(`/api/Sharing/${id}`);\r\n        return response.data;\r\n    }\r\n    async deleteSharingItem(id: string) {\r\n        const response = await this.axiosInstance.delete(`/api/Sharing/${id}`);\r\n        return response.data;\r\n    }\r\n    async borrowItem(id: string) {\r\n        const response = await this.axiosInstance.post(`/api/Sharing/${id}/borrow`);\r\n        return response.data;\r\n    }\r\n\r\n    async returnItem(id: string) {\r\n        const response = await this.axiosInstance.post(`/api/Sharing/${id}/return`);\r\n        return response.data;\r\n    }\r\n}\r\n\r\nconst sharingService = new SharingService();\r\nexport default sharingService;\r\n"],"names":["UploadService","_classCallCheck","_createClass","key","value","_uploadFile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","formData","response","wrap","_context","prev","next","FormData","append","ApiManager","getAxiosInstance","post","headers","sent","abrupt","data","stop","_x","apply","arguments","_deleteFile","_callee2","fullUrl","filePath","_context2","replace","delete","concat","_x2","UploadComponent","_ref","form","fieldName","_useState","useState","_useState2","_slicedToArray","setFilePath","handleDelete","_ref2","setFieldsValue","_defineProperty","t0","console","log","customRequest","_ref4","_ref3","onSuccess","onError","_response","onProgress","_jsx","Upload","name","listType","onRemove","onChange","info","status","children","Button","icon","UploadOutlined","fields","onFinish","initialValues","_Form$useForm","Form","renderField","field","fieldInput","fieldKey","_toConsumableArray","type","Input","DatePicker","format","showTime","Checkbox","InputNumber","TimePicker","valuePropName","extra","label","rules","join","_jsxs","layout","encType","map","subField","renderFields","style","textAlign","htmlType","navigate","useNavigate","values","sharingService","message","className","styles","Typography","BaseFormComponent","required","address","description","overview","fee","SharingService","axiosInstance","this","_createItem","_getSharingItem","id","get","_deleteSharingItem","_callee3","_context3","_x3","_borrowItem","_callee4","_context4","_x4","_returnItem","_callee5","_context5","_x5"],"sourceRoot":""}