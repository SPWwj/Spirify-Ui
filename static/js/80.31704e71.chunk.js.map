{"version":3,"file":"static/js/80.31704e71.chunk.js","mappings":"8TAGMA,EAAa,oBAAAA,KAAAC,EAAAA,EAAAA,GAAA,KAAAD,EAAA,CAmBd,OAnBcE,EAAAA,EAAAA,GAAAF,EAAA,OAAAG,IAAA,aAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACf,SAAAC,EAAwBC,GAAU,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEA,OADxBL,EAAW,IAAIM,UACZC,OAAO,OAAQR,GAAMI,EAAAE,KAAA,EAEPG,EAAAA,EAAAA,cAAyBC,mBAAmBC,KAAK,cAAeV,EAAU,CAC7FW,QAAS,CACL,eAAgB,yBAErB,KAAD,EAJY,OAARV,EAAQE,EAAAS,KAAAT,EAAAU,OAAA,SAMPZ,EAASa,MAAI,wBAAAX,EAAAY,OAAA,GAAAjB,EAAA,KACvB,gBAAAkB,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,EAZc,IAYd,CAAA1B,IAAA,aAAAC,MAAA,eAAA0B,GAAAxB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAuB,EAAwBC,GAAe,IAAAC,EAAArB,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACsB,OAAnDiB,EAAWD,EAAQG,QAAQhB,EAAAA,EAAAA,SAAqB,IAAGe,EAAAlB,KAAA,EAElCG,EAAAA,EAAAA,cAAyBC,mBAAmBgB,OAAO,wBAADC,OAAyBJ,IAAY,KAAD,EAA/F,OAARrB,EAAQsB,EAAAX,KAAAW,EAAAV,OAAA,SACPZ,EAASa,MAAI,wBAAAS,EAAAR,OAAA,GAAAK,EAAA,KACvB,gBAAAO,GAAA,OAAAR,EAAAF,MAAA,KAAAC,UAAA,EAPA,MAOA7B,CAAA,CAnBc,GAsBnB,I,SCPauC,EAAkD,SAAHC,GAGrD,IAFNC,EAAID,EAAJC,KACAC,EAASF,EAATE,UAEAC,GAAgCC,EAAAA,EAAAA,UAAwB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDV,EAAQY,EAAA,GAAEE,EAAWF,EAAA,GAUtBG,EAAY,eAAAC,GAAA3C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,GAEfkB,EAAS,CAADnB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACLhB,EAAAA,WAAyBiC,GAAU,KAAD,EACxCc,EAAY,MACZN,EAAKS,gBAAcC,EAAAA,EAAAA,GAAC,CAAC,EAAET,EAAY,OAAQ,OAAA5B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsC,GAAAtC,EAAA,SAG5CuC,QAAQC,IAAGxC,EAAAsC,IAAQ,yBAAAtC,EAAAY,OAAA,GAAAjB,EAAA,kBAEpB,kBAViB,OAAAwC,EAAArB,MAAA,KAAAC,UAAA,KAYZ0B,EAAa,eAAAC,GAAAlD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuB,EAAA0B,GAAA,IAAA/C,EAAAgD,EAAAC,EAAAC,EAAA,OAAArD,EAAAA,EAAAA,KAAAM,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAId,OAHPN,EAAI+C,EAAJ/C,KACU+C,EAAVI,WACAH,EAASD,EAATC,UACAC,EAAOF,EAAPE,QAAOzB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAIiBhB,EAAAA,WAAyBU,GAAM,KAAD,EAA/CE,EAAQsB,EAAAX,KAGdmC,EAAU9C,EAAUF,GAAMwB,EAAAlB,KAAA,gBAAAkB,EAAAnB,KAAA,EAAAmB,EAAAkB,GAAAlB,EAAA,SAG1ByB,EAAOzB,EAAAkB,IAAQ,yBAAAlB,EAAAR,OAAA,GAAAK,EAAA,kBAEhB,gBAhBkBJ,GAAA,OAAA6B,EAAA5B,MAAA,KAAAC,UAAA,KAkBnB,OACCiC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACNC,KAAK,OACLT,cAAeA,EACfU,SAAS,UACTC,SAAUlB,EACVmB,SA5CyB,SAACC,GAC3B,GAAyB,SAArBA,EAAK1D,KAAK2D,OAAmB,CAChC,IAAMpC,EAAWmC,EAAK1D,KAAKE,SAASqB,SACpCc,EAAYd,GACZQ,EAAKS,gBAAcC,EAAAA,EAAAA,GAAC,CAAC,EAAET,EAAYT,GACpC,CACD,EAsC+BqC,UAE7BR,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CAACC,MAAMV,EAAAA,EAAAA,KAACW,EAAAA,EAAc,IAAIH,SAAC,qBAGrC,ECiDA,EAtFmD,SAAH9B,GAIzC,IAHNkC,EAAMlC,EAANkC,OACAC,EAAQnC,EAARmC,SACAC,EAAapC,EAAboC,cAEAC,EAAeC,EAAAA,EAAAA,UAARrC,GAAsBK,EAAAA,EAAAA,GAAA+B,EAAA,GAAlB,GAELE,EAAc,SAACC,EAAmBtC,GACvC,IACIuC,EADEC,EAAWxC,EAAS,GAAAL,QAAA8C,EAAAA,EAAAA,GAAOzC,GAAS,CAAEsC,EAAMhB,OAAQ,CAACgB,EAAMhB,MAGjE,OAAQgB,EAAMI,MACb,IAAK,WACJH,GAAanB,EAAAA,EAAAA,KAACuB,EAAAA,EAAAA,SAAc,IAC5B,MACD,IAAK,OACJJ,GAAanB,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CAACC,OAAO,aAAaC,UAAU,IACvD,MACD,IAAK,WACJP,GAAanB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,IACtB,MACD,IAAK,SACJR,GAAanB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAW,IACzB,MACD,IAAK,OACJT,GAAanB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,IACxB,MACD,IAAK,WACJV,GAAanB,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CAACE,UAAQ,IACjC,MACD,IAAK,QACJP,GACCnB,EAAAA,EAAAA,KAACgB,EAAAA,EAAAA,KAAS,CAACc,cAAc,WAAWC,MAAM,gBAAevB,UACxDR,EAAAA,EAAAA,KAACvB,EAAe,CAACE,KAAMA,EAAMC,UAAWsC,EAAMhB,SAGhD,MACD,QACCiB,GAAanB,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,IAGrB,OACCvB,EAAAA,EAAAA,KAACgB,EAAAA,EAAAA,KAAS,CAETd,KAAMkB,EACNY,MAAOd,EAAMc,MACbC,MAAOf,EAAMe,MAAMzB,SAElBW,GALIC,EAASc,KAAK,KAQtB,EAeA,OACCC,EAAAA,EAAAA,MAACnB,EAAAA,EAAI,CACJrC,KAAMA,EACNyD,OAAO,WACPvB,SAAUA,EACVC,cAAeA,EACfuB,QAAQ,sBAAqB7B,SAAA,CAnBV,SAACI,EAAsBhC,GAC3C,OAAOgC,EAAO0B,KAAI,SAACpB,GAAK,MACR,WAAfA,EAAMI,MAAqBJ,EAAMN,OAC9BM,EAAMN,OAAO0B,KAAI,SAACC,GAAQ,OAC1BtB,EACCsB,EACA3D,EAAS,GAAAL,QAAA8C,EAAAA,EAAAA,GAAOzC,GAAS,CAAEsC,EAAMhB,OAAQ,CAACgB,EAAMhB,MAChD,IAEDe,EAAYC,EAAOtC,EAAU,GAElC,CAUG4D,CAAa5B,IACdZ,EAAAA,EAAAA,KAACgB,EAAAA,EAAAA,KAAS,CAAAR,UACTR,EAAAA,EAAAA,KAAA,OAAKyC,MAAO,CAAEC,UAAW,SAAUlC,UAClCR,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CAACa,KAAK,UAAUqB,SAAS,SAAQnC,SAAC,iBAO9C,C,0HCvHA,EAAqC,+C,gDC8C/BoC,EAAoC,CACzCC,GAAI,EACJ3C,KAAM,8BACN4C,SAAS,8LACTC,YAAY,okBAEZC,YAAa,aACbC,SAAU,mBACVC,SAAU,wCACVC,eACC,wEACDC,QAAS,CACRC,OAAQ,gBACRC,KAAM,YACNC,MAAO,YACPC,QAAS,YACTC,QAAS,KA4IX,EAxIqC,WACpC,IAAMC,GAAWC,EAAAA,EAAAA,MA2FX7C,EAAgB,CACrBZ,KAAM0C,EAAsB1C,KAC5B4C,SAAUF,EAAsBE,SAChCC,YAAaH,EAAsBG,YACnCK,QAAS,CACRC,OAAQT,EAAsBQ,QAAQC,OACtCC,KAAMV,EAAsBQ,QAAQE,KACpCC,MAAOX,EAAsBQ,QAAQG,MACrCC,QAASZ,EAAsBQ,QAAQI,QACvCC,QAASb,EAAsBQ,QAAQK,SAExCG,MAAOhB,EAAsBgB,MAC7BX,SAAUL,EAAsBK,SAChCC,SAAUN,EAAsBM,SAChCC,eAAgBP,EAAsBO,eACtCH,YAAaa,IAAMjB,EAAsBI,cAGpCnC,EAAQ,eAAAnC,GAAAlC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOmH,GAAkB,OAAArH,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMxC,OALDqC,QAAQC,IAAIsE,GAAQ9G,EAAAC,KAAA,EAEf6G,EAAOd,cACVc,EAAOd,YAAca,IAAMC,EAAOd,aAAavB,OAAO,eAEvDzE,EAAAE,KAAA,EACM6G,EAAAA,EAAAA,cAAgCD,GAAQ,KAAD,EAC7CJ,EAAS,0BAA0B1G,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAsC,GAAAtC,EAAA,SAEnCuC,QAAQyE,MAAM,mDAAkDhH,EAAAsC,IAAS,yBAAAtC,EAAAY,OAAA,GAAAjB,EAAA,kBAE1E,gBAZakB,GAAA,OAAAa,EAAAZ,MAAA,KAAAC,UAAA,KAcd,OACCoE,EAAAA,EAAAA,MAAA,OAAK8B,UAAWC,EAA0B1D,SAAA,EACzCR,EAAAA,EAAAA,KAACmE,EAAAA,EAAAA,MAAgB,CAAA3D,SAAC,0BAClBR,EAAAA,EAAAA,KAACoE,EAAAA,EAAiB,CACjBvD,SAAUA,EACVD,OA9H0B,CAC5B,CACCV,KAAM,OACN8B,MAAO,OACPC,MAAO,CAAC,CAAEoC,UAAU,EAAMC,QAAS,sCACnChD,KAAM,SAEP,CACCpB,KAAM,QACN8B,MAAO,QACPV,KAAM,SAEP,CACCpB,KAAM,WACN8B,MAAO,WACPC,MAAO,CACN,CAAEoC,UAAU,EAAMC,QAAS,0CAE5BhD,KAAM,YAEP,CACCpB,KAAM,cACN8B,MAAO,cACPV,KAAM,YAEP,CACCpB,KAAM,UACN8B,MAAO,UACPV,KAAM,SACNV,OAAQ,CACP,CACCV,KAAM,SACN8B,MAAO,SACPC,MAAO,CAAC,CAAEoC,UAAU,EAAMC,QAAS,6BACnChD,KAAM,SAEP,CACCpB,KAAM,OACN8B,MAAO,OACPC,MAAO,CAAC,CAAEoC,UAAU,EAAMC,QAAS,2BACnChD,KAAM,SAEP,CACCpB,KAAM,QACN8B,MAAO,QACPC,MAAO,CAAC,CAAEoC,UAAU,EAAMC,QAAS,4BACnChD,KAAM,SAEP,CACCpB,KAAM,UACN8B,MAAO,UACPC,MAAO,CAAC,CAAEoC,UAAU,EAAMC,QAAS,8BACnChD,KAAM,SAEP,CACCpB,KAAM,UACN8B,MAAO,WACPC,MAAO,CAAC,CAAEoC,UAAU,EAAMC,QAAS,+BACnChD,KAAM,WAIT,CACCpB,KAAM,QACN8B,MAAO,QACPV,KAAM,UAEP,CACCpB,KAAM,WACN8B,MAAO,WACPV,KAAM,SAEP,CACCpB,KAAM,WACN8B,MAAO,WACPV,KAAM,SAEP,CACCpB,KAAM,iBACN8B,MAAO,kBACPV,KAAM,SAEP,CACCpB,KAAM,cACN8B,MAAO,eACPV,KAAM,SA0CLR,cAAeA,MAInB,C,6ECvMMiD,EAAiB,WAGnB,SAAAA,KAAc5H,EAAAA,EAAAA,GAAA,KAAA4H,GAAA,KAFNQ,mBAAa,EAGjBC,KAAKD,cAAgBlH,EAAAA,EAAAA,cAAyBC,kBAClD,CAeC,OAfAlB,EAAAA,EAAAA,GAAA2H,EAAA,EAAA1H,IAAA,gBAAAC,MAAA,eAAAmI,GAAAjI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAC,EAAoB+H,GAAmB,IAAA5H,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZsH,KAAKD,cAAchH,KAAK,sBAAuBmH,GAAgB,KAAD,EAAvE,OAAR5H,EAAQE,EAAAS,KAAAT,EAAAU,OAAA,SACPZ,EAASa,MAAI,wBAAAX,EAAAY,OAAA,GAAAjB,EAAA,UACvB,gBAAAkB,GAAA,OAAA4G,EAAA3G,MAAA,KAAAC,UAAA,EALA,IAKA,CAAA1B,IAAA,gBAAAC,MAAA,eAAAqI,GAAAnI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAuB,EAAoB4E,GAAU,IAAA/F,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EACHsH,KAAKD,cAAcK,IAAI,mBAADrG,OAAoBsE,IAAM,KAAD,EAAxD,OAAR/F,EAAQsB,EAAAX,KAAAW,EAAAV,OAAA,SACPZ,EAASa,MAAI,wBAAAS,EAAAR,OAAA,GAAAK,EAAA,UACvB,gBAAAO,GAAA,OAAAmG,EAAA7G,MAAA,KAAAC,UAAA,EALA,IAKA,CAAA1B,IAAA,mBAAAC,MAAA,eAAAuI,GAAArI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAoI,EAAuBjC,GAAU,IAAA/F,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAgI,GAAA,cAAAA,EAAA9H,KAAA8H,EAAA7H,MAAA,cAAA6H,EAAA7H,KAAA,EACNsH,KAAKD,cAAcjG,OAAO,mBAADC,OAAoBsE,IAAM,KAAD,EAA3D,OAAR/F,EAAQiI,EAAAtH,KAAAsH,EAAArH,OAAA,SACPZ,EAASa,MAAI,wBAAAoH,EAAAnH,OAAA,GAAAkH,EAAA,UACvB,gBAAAE,GAAA,OAAAH,EAAA/G,MAAA,KAAAC,UAAA,EALA,MAKAgG,CAAA,CApBkB,GAuBjBkB,EAAoB,IAAIlB,EAC9B,K,+ECxBA,EADwB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,wRAA4R,KAAQ,eAAgB,MAAS,U,UCMxdmB,EAAoB,SAA2BC,EAAOC,GACxD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,GAAS,CAAC,EAAGJ,EAAO,CACpEC,IAAKA,EACL1E,KAAM8E,IAEV,EAIA,MAA4BH,EAAAA,WAAiBH,E,8ECd7C,EAD8B,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uOAA2O,KAAQ,qBAAsB,MAAS,U,UCMnbO,EAA0B,SAAiCN,EAAOC,GACpE,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,GAAS,CAAC,EAAGJ,EAAO,CACpEC,IAAKA,EACL1E,KAAMgF,IAEV,EAIA,MAA4BL,EAAAA,WAAiBI,E","sources":["services/UploadService.ts","components/UploadComponent.tsx","components/BaseFormComponent.tsx","webpack://spirify/./src/pages/dashboard/AttractionFormPage.module.scss?89c3","pages/dashboard/AttractionFormPage.tsx","services/AttractionService.ts","../node_modules/@ant-design/icons-svg/es/asn/CheckCircleFilled.js","../node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleFilled.js","../node_modules/@ant-design/icons/es/icons/ExclamationCircleFilled.js"],"sourcesContent":["// UploadService.ts\r\nimport ApiManager from './ApiManager';\r\n\r\nclass UploadService {\r\n    static async uploadFile(file: File) {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        const response = await ApiManager.getInstance().getAxiosInstance().post('/api/Upload', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    }\r\n\r\n    static async deleteFile(fullUrl: string) {\r\n        const filePath = fullUrl.replace(ApiManager.BASE_URL, \"\");\r\n\r\n        const response = await ApiManager.getInstance().getAxiosInstance().delete(`/api/upload?filePath=${filePath}`);\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default UploadService;\r\n","import { Button, Upload } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { useState } from \"react\";\r\nimport UploadService from \"services/UploadService\";\r\n\r\ninterface UploadComponentProps {\r\n\tform: any; // Replace `any` with the correct type\r\n\tfieldName: string; // Replace `any` with the correct type\r\n}\r\n\r\n// Define your own type for the custom request options\r\ninterface CustomRequestOptions {\r\n\tfile: File;\r\n\tonProgress: (event: { percent: number }) => void;\r\n\tonSuccess: (response: any, file: File | Blob) => void;\r\n\tonError: (error: any) => void;\r\n}\r\n\r\nexport const UploadComponent: React.FC<UploadComponentProps> = ({\r\n\tform,\r\n\tfieldName,\r\n}) => {\r\n\tconst [filePath, setFilePath] = useState<string | null>(null);\r\n\r\n\tconst handleUploadChange = (info: any) => {\r\n\t\tif (info.file.status === \"done\") {\r\n\t\t\tconst filePath = info.file.response.filePath;\r\n\t\t\tsetFilePath(filePath);\r\n\t\t\tform.setFieldsValue({ [fieldName]: filePath });\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDelete = async () => {\r\n\t\ttry {\r\n\t\t\tif (filePath) {\r\n\t\t\t\tawait UploadService.deleteFile(filePath);\r\n\t\t\t\tsetFilePath(null);\r\n\t\t\t\tform.setFieldsValue({ [fieldName]: null });\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst customRequest = async ({\r\n\t\tfile,\r\n\t\tonProgress,\r\n\t\tonSuccess,\r\n\t\tonError,\r\n\t}: CustomRequestOptions) => {\r\n\t\ttry {\r\n\t\t\t// Upload the file\r\n\t\t\tconst response = await UploadService.uploadFile(file);\r\n\r\n\t\t\t// Call onSuccess with the response\r\n\t\t\tonSuccess(response, file);\r\n\t\t} catch (error) {\r\n\t\t\t// Call onError with the error\r\n\t\t\tonError(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Upload\r\n\t\t\tname=\"logo\"\r\n\t\t\tcustomRequest={customRequest as any}\r\n\t\t\tlistType=\"picture\"\r\n\t\t\tonRemove={handleDelete}\r\n\t\t\tonChange={handleUploadChange}\r\n\t\t>\r\n\t\t\t<Button icon={<UploadOutlined />}>Click to upload</Button>\r\n\t\t</Upload>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport {\r\n\tForm,\r\n\tInput,\r\n\tDatePicker,\r\n\tCheckbox,\r\n\tButton,\r\n\tInputNumber,\r\n\tTimePicker,\r\n} from \"antd\";\r\nimport { UploadComponent } from \"./UploadComponent\";\r\n\r\nexport interface FieldProps {\r\n\tname: string;\r\n\tlabel: string;\r\n\trules?: any[];\r\n\ttype?:\r\n\t\t| \"input\"\r\n\t\t| \"textarea\"\r\n\t\t| \"date\"\r\n\t\t| \"checkbox\"\r\n\t\t| \"number\"\r\n\t\t| \"time\"\r\n\t\t| \"datetime\"\r\n\t\t| \"image\"\r\n\t\t| \"object\";\r\n\tvalue?: any;\r\n\tfields?: FieldProps[];\r\n}\r\n\r\ninterface BaseFormProps {\r\n\tfields: FieldProps[];\r\n\tonFinish: (values: any) => void;\r\n\tinitialValues?: Record<string, any>;\r\n}\r\n\r\nconst BaseFormComponent: React.FC<BaseFormProps> = ({\r\n\tfields,\r\n\tonFinish,\r\n\tinitialValues,\r\n}) => {\r\n\tconst [form] = Form.useForm();\r\n\r\n\tconst renderField = (field: FieldProps, fieldName?: string[]) => {\r\n\t\tconst fieldKey = fieldName ? [...fieldName, field.name] : [field.name];\r\n\t\tlet fieldInput;\r\n\r\n\t\tswitch (field.type) {\r\n\t\t\tcase \"textarea\":\r\n\t\t\t\tfieldInput = <Input.TextArea />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"date\":\r\n\t\t\t\tfieldInput = <DatePicker format=\"YYYY-MM-DD\" showTime={false} />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"checkbox\":\r\n\t\t\t\tfieldInput = <Checkbox />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"number\":\r\n\t\t\t\tfieldInput = <InputNumber />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"time\":\r\n\t\t\t\tfieldInput = <TimePicker />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"datetime\":\r\n\t\t\t\tfieldInput = <DatePicker showTime />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"image\":\r\n\t\t\t\tfieldInput = (\r\n\t\t\t\t\t<Form.Item valuePropName=\"fileList\" extra=\"Image Preview\">\r\n\t\t\t\t\t\t<UploadComponent form={form} fieldName={field.name} />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tfieldInput = <Input />;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Form.Item\r\n\t\t\t\tkey={fieldKey.join(\".\")}\r\n\t\t\t\tname={fieldKey}\r\n\t\t\t\tlabel={field.label}\r\n\t\t\t\trules={field.rules}\r\n\t\t\t>\r\n\t\t\t\t{fieldInput}\r\n\t\t\t</Form.Item>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderFields = (fields: FieldProps[], fieldName?: string[]) => {\r\n\t\treturn fields.map((field) =>\r\n\t\t\tfield.type === \"object\" && field.fields\r\n\t\t\t\t? field.fields.map((subField) =>\r\n\t\t\t\t\t\trenderField(\r\n\t\t\t\t\t\t\tsubField,\r\n\t\t\t\t\t\t\tfieldName ? [...fieldName, field.name] : [field.name]\r\n\t\t\t\t\t\t)\r\n\t\t\t\t  )\r\n\t\t\t\t: renderField(field, fieldName)\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tform={form}\r\n\t\t\tlayout=\"vertical\"\r\n\t\t\tonFinish={onFinish}\r\n\t\t\tinitialValues={initialValues}\r\n\t\t\tencType=\"multipart/form-data\"\r\n\t\t>\r\n\t\t\t{renderFields(fields)}\r\n\t\t\t<Form.Item>\r\n\t\t\t\t<div style={{ textAlign: \"right\" }}>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default BaseFormComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"attractionFormPage\":\"AttractionFormPage_attractionFormPage__UXSFc\",\"avatarUploader\":\"AttractionFormPage_avatarUploader__tn8L-\",\"avatarPreview\":\"AttractionFormPage_avatarPreview__QjlS6\"};","import React from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./AttractionFormPage.module.scss\";\r\nimport BaseFormComponent, { FieldProps } from \"components/BaseFormComponent\";\r\nimport dayjs from \"dayjs\";\r\nimport AttractionService from \"services/AttractionService\";\r\nimport { Attraction } from \"models/Attraction\";\r\n\r\n// const marinaBaySands: Attraction = {\r\n// \tid: 0,\r\n// \tname: \"Marina Bay Sands\",\r\n// \toverview: `Marina Bay Sands is an integrated resort fronting Marina Bay in Singapore, owned by the Las Vegas Sands corporation. At its opening in 2010, it was billed as the world's most expensive standalone casino property.`,\r\n// \tdescription: `Marina Bay Sands is located at Bayfront MRT Station and steps from the lively Central Business District. Consisting of 3 buildings connected by a magnificent rooftop park, it boasts a casino, mall, museum, theaters and many fine-dining options.\r\n//     Guests have access to the rooftop Infinity Pool where they can enjoy a panoramic view of the city's skyline. A luxury shopping mall is also on site, and free WiFi is available in public areas.`,\r\n// \tprice: 1,\r\n// \topeningDate: \"2010-04-27\",\r\n// \tlocation: \"Marina Bay, Singapore\",\r\n// \tcategory: \"Hotel, Casino, Shopping, and Entertainment\",\r\n// \ttargetAudience: \"Tourists, Locals, Business People\",\r\n// \taddress: {\r\n// \t\tstreet: \"10 Bayfront Avenue\",\r\n// \t\tcity: \"Singapore\",\r\n// \t\tstate: \"Singapore\",\r\n// \t\tcountry: \"Singapore\",\r\n// \t\tzipCode: \"018956\",\r\n// \t},\r\n// };\r\n// const singaporeBotanicGardens: Attraction = {\r\n// \tid: 0,\r\n// \tname: \"Singapore Botanic Gardens\",\r\n// \toverview: `The Singapore Botanic Gardens is a 161-year-old tropical garden located at the fringe of Singapore's Orchard Road shopping district. It is one of three gardens, and the only tropical garden, to be honoured as a UNESCO World Heritage Site.`,\r\n// \tdescription: `The Singapore Botanic Gardens spans 82 hectares and features a small tropical rainforest, a ginger garden, and an orchid garden. The National Orchid Garden, located within the Botanic Gardens, is home to a collection of more than 1,000 species and 2,000 hybrids of orchids.\r\n//     Visitors can enjoy daily events, concerts, exhibitions, and a children's garden. Free WiFi is available throughout the park.`,\r\n// \tprice: 0, // Free admission with exception for National Orchid Garden\r\n// \topeningDate: \"1859-06-01\",\r\n// \tlocation: \"Orchard Road, Singapore\",\r\n// \tcategory: \"Botanic Garden, Nature, and Education\",\r\n// \ttargetAudience: \"Tourists, Locals, Nature Enthusiasts, Families\",\r\n// \taddress: {\r\n// \t\tstreet: \"1 Cluny Road\",\r\n// \t\tcity: \"Singapore\",\r\n// \t\tstate: \"Singapore\",\r\n// \t\tcountry: \"Singapore\",\r\n// \t\tzipCode: \"259569\",\r\n// \t},\r\n// };\r\nconst singaporeRailCorridor: Attraction = {\r\n\tid: 2,\r\n\tname: \"The Singapore Rail Corridor\",\r\n\toverview: `The Singapore Rail Corridor is a green corridor that runs the length of Singapore, from the North to the South, where the old railway tracks of the Keretapi Tanah Melayu (KTM) used to be.`,\r\n\tdescription: `Stretching across 24 km, the Singapore Rail Corridor is a shared space where communities can gather and participate in a range of recreational activities. This linear park cuts through various residential and business areas, showcasing the contrast between Singapore's lush greenery and its urban environment. \r\n    The Rail Corridor is perfect for cycling, jogging, walking, and observing nature. It's also an important refuge for native fauna and flora. The trail's key attractions include the conserved Bukit Timah Railway Station and the iconic steel truss railway bridges.`,\r\n\topeningDate: \"2011-07-01\",\r\n\tlocation: \"Across Singapore\",\r\n\tcategory: \"Nature, Park, Recreation, and History\",\r\n\ttargetAudience:\r\n\t\t\"Tourists, Locals, Nature Enthusiasts, Historians, Fitness Enthusiasts\",\r\n\taddress: {\r\n\t\tstreet: \"Rail Corridor\",\r\n\t\tcity: \"Singapore\",\r\n\t\tstate: \"Singapore\",\r\n\t\tcountry: \"Singapore\",\r\n\t\tzipCode: \"\",\r\n\t},\r\n};\r\n\r\nconst AttractionFormPage: React.FC = () => {\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst fields: FieldProps[] = [\r\n\t\t{\r\n\t\t\tname: \"name\",\r\n\t\t\tlabel: \"Name\",\r\n\t\t\trules: [{ required: true, message: \"Please input the attraction name!\" }],\r\n\t\t\ttype: \"input\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"image\",\r\n\t\t\tlabel: \"Image\",\r\n\t\t\ttype: \"image\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"overview\",\r\n\t\t\tlabel: \"Overview\",\r\n\t\t\trules: [\r\n\t\t\t\t{ required: true, message: \"Please input the attraction overview!\" },\r\n\t\t\t],\r\n\t\t\ttype: \"textarea\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"description\",\r\n\t\t\tlabel: \"Description\",\r\n\t\t\ttype: \"textarea\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"address\",\r\n\t\t\tlabel: \"Address\",\r\n\t\t\ttype: \"object\",\r\n\t\t\tfields: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"street\",\r\n\t\t\t\t\tlabel: \"Street\",\r\n\t\t\t\t\trules: [{ required: true, message: \"Please input the street!\" }],\r\n\t\t\t\t\ttype: \"input\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"city\",\r\n\t\t\t\t\tlabel: \"City\",\r\n\t\t\t\t\trules: [{ required: true, message: \"Please input the city!\" }],\r\n\t\t\t\t\ttype: \"input\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"state\",\r\n\t\t\t\t\tlabel: \"State\",\r\n\t\t\t\t\trules: [{ required: true, message: \"Please input the state!\" }],\r\n\t\t\t\t\ttype: \"input\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"country\",\r\n\t\t\t\t\tlabel: \"Country\",\r\n\t\t\t\t\trules: [{ required: true, message: \"Please input the country!\" }],\r\n\t\t\t\t\ttype: \"input\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"zipCode\",\r\n\t\t\t\t\tlabel: \"Zip Code\",\r\n\t\t\t\t\trules: [{ required: true, message: \"Please input the zip code!\" }],\r\n\t\t\t\t\ttype: \"input\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"price\",\r\n\t\t\tlabel: \"Price\",\r\n\t\t\ttype: \"number\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"location\",\r\n\t\t\tlabel: \"Location\",\r\n\t\t\ttype: \"input\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"category\",\r\n\t\t\tlabel: \"Category\",\r\n\t\t\ttype: \"input\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"targetAudience\",\r\n\t\t\tlabel: \"Target Audience\",\r\n\t\t\ttype: \"input\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"openingDate\",\r\n\t\t\tlabel: \"Opening Date\",\r\n\t\t\ttype: \"date\",\r\n\t\t},\r\n\t];\r\n\r\n\tconst initialValues = {\r\n\t\tname: singaporeRailCorridor.name,\r\n\t\toverview: singaporeRailCorridor.overview,\r\n\t\tdescription: singaporeRailCorridor.description,\r\n\t\taddress: {\r\n\t\t\tstreet: singaporeRailCorridor.address.street,\r\n\t\t\tcity: singaporeRailCorridor.address.city,\r\n\t\t\tstate: singaporeRailCorridor.address.state,\r\n\t\t\tcountry: singaporeRailCorridor.address.country,\r\n\t\t\tzipCode: singaporeRailCorridor.address.zipCode,\r\n\t\t},\r\n\t\tprice: singaporeRailCorridor.price,\r\n\t\tlocation: singaporeRailCorridor.location,\r\n\t\tcategory: singaporeRailCorridor.category,\r\n\t\ttargetAudience: singaporeRailCorridor.targetAudience,\r\n\t\topeningDate: dayjs(singaporeRailCorridor.openingDate),\r\n\t};\r\n\r\n\tconst onFinish = async (values: Attraction) => {\r\n\t\tconsole.log(values);\r\n\t\ttry {\r\n\t\t\tif (values.openingDate)\r\n\t\t\t\tvalues.openingDate = dayjs(values.openingDate).format(\"YYYY-MM-DD\");\r\n\r\n\t\t\t// Send flattened object instead\r\n\t\t\tawait AttractionService.addAttraction(values);\r\n\t\t\tnavigate(`/dashboard/attraction/`);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"An error occurred while creating the attraction:\", error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.attractionFormPage}>\r\n\t\t\t<Typography.Title>Add a new Attraction</Typography.Title>\r\n\t\t\t<BaseFormComponent\r\n\t\t\t\tonFinish={onFinish}\r\n\t\t\t\tfields={fields}\r\n\t\t\t\tinitialValues={initialValues}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttractionFormPage;\r\n","import ApiManager from './ApiManager';\r\n\r\nclass AttractionService {\r\n    private axiosInstance: any;\r\n\r\n    constructor() {\r\n        this.axiosInstance = ApiManager.getInstance().getAxiosInstance();\r\n    }\r\n\r\n    async addAttraction(attractionData: any) {\r\n        const response = await this.axiosInstance.post('/api/attraction/add', attractionData);\r\n        return response.data;\r\n    }\r\n\r\n    async getAttraction(id: string) {\r\n        const response = await this.axiosInstance.get(`/api/attraction/${id}`);\r\n        return response.data;\r\n    }\r\n\r\n    async deleteAttraction(id: string) {\r\n        const response = await this.axiosInstance.delete(`/api/attraction/${id}`);\r\n        return response.data;\r\n    }\r\n}\r\n\r\nconst attractionService = new AttractionService();\r\nexport default attractionService;\r\n","// This icon file is generated automatically.\nvar CheckCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\" } }] }, \"name\": \"check-circle\", \"theme\": \"filled\" };\nexport default CheckCircleFilled;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CheckCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CheckCircleFilled\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CheckCircleFilled = function CheckCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CheckCircleFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CheckCircleFilled.displayName = 'CheckCircleFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(CheckCircleFilled);","// This icon file is generated automatically.\nvar ExclamationCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"filled\" };\nexport default ExclamationCircleFilled;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport ExclamationCircleFilledSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleFilled\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar ExclamationCircleFilled = function ExclamationCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: ExclamationCircleFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ExclamationCircleFilled.displayName = 'ExclamationCircleFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(ExclamationCircleFilled);"],"names":["UploadService","_classCallCheck","_createClass","key","value","_uploadFile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","formData","response","wrap","_context","prev","next","FormData","append","ApiManager","getAxiosInstance","post","headers","sent","abrupt","data","stop","_x","apply","arguments","_deleteFile","_callee2","fullUrl","filePath","_context2","replace","delete","concat","_x2","UploadComponent","_ref","form","fieldName","_useState","useState","_useState2","_slicedToArray","setFilePath","handleDelete","_ref2","setFieldsValue","_defineProperty","t0","console","log","customRequest","_ref4","_ref3","onSuccess","onError","_response","onProgress","_jsx","Upload","name","listType","onRemove","onChange","info","status","children","Button","icon","UploadOutlined","fields","onFinish","initialValues","_Form$useForm","Form","renderField","field","fieldInput","fieldKey","_toConsumableArray","type","Input","DatePicker","format","showTime","Checkbox","InputNumber","TimePicker","valuePropName","extra","label","rules","join","_jsxs","layout","encType","map","subField","renderFields","style","textAlign","htmlType","singaporeRailCorridor","id","overview","description","openingDate","location","category","targetAudience","address","street","city","state","country","zipCode","navigate","useNavigate","price","dayjs","values","AttractionService","error","className","styles","Typography","BaseFormComponent","required","message","axiosInstance","this","_addAttraction","attractionData","_getAttraction","get","_deleteAttraction","_callee3","_context3","_x3","attractionService","CheckCircleFilled","props","ref","React","AntdIcon","_extends","CheckCircleFilledSvg","ExclamationCircleFilled","ExclamationCircleFilledSvg"],"sourceRoot":""}