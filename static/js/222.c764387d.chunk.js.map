{"version":3,"file":"static/js/222.c764387d.chunk.js","mappings":"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","sources":["webpack://spirify/./src/pages/TextToSpeechPage.module.scss?c75f","webpack://spirify/./src/components/VoiceSelection.module.scss?5a50","webpack://spirify/./src/components/VoiceCard.module.scss?138d","components/VoiceCard.tsx","services/UserSpeechConfigService.ts","components/VoiceSelection.tsx","pages/TextToSpeechPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TextToSpeechPage_container__LGby1\",\"inputSection\":\"TextToSpeechPage_inputSection__U1bbH\",\"centerContent\":\"TextToSpeechPage_centerContent__dzq40\",\"panelContent\":\"TextToSpeechPage_panelContent__I6Msx\",\"textArea\":\"TextToSpeechPage_textArea__j0Lhi\",\"button\":\"TextToSpeechPage_button__RuQAZ\",\"messageList\":\"TextToSpeechPage_messageList__KrlWB\",\"messageItem\":\"TextToSpeechPage_messageItem__VlQUi\",\"downloadButton\":\"TextToSpeechPage_downloadButton__S5kPi\"};","// extracted by mini-css-extract-plugin\nexport default {\"selection\":\"VoiceSelection_selection__mNcoE\"};","// extracted by mini-css-extract-plugin\nexport default {\"voiceCard\":\"VoiceCard_voiceCard__YFNll\",\"avatarWrapper\":\"VoiceCard_avatarWrapper__gpcuO\",\"avatar\":\"VoiceCard_avatar__iI3jg\",\"audioWrapper\":\"VoiceCard_audioWrapper__xosl2\",\"audio\":\"VoiceCard_audio__tj-q5\",\"listItem\":\"VoiceCard_listItem__lFKwp\",\"ant-list-item-meta-title\":\"VoiceCard_ant-list-item-meta-title__V99OI\",\"ant-list-item-meta-description\":\"VoiceCard_ant-list-item-meta-description__2tVbF\"};","import { Avatar, List, Typography, Divider } from \"antd\";\r\nimport styles from \"./VoiceCard.module.scss\"; // import the CSS module\r\nimport { VoiceModel } from \"models/VoiceModel\";\r\n\r\nconst { Title } = Typography;\r\n\r\ninterface VoiceCardProps {\r\n\tvoiceDetails: VoiceModel;\r\n}\r\n\r\nconst VoiceCard: React.FC<VoiceCardProps> = ({ voiceDetails }) => {\r\n\tconst voiceDetailsList = [\r\n\t\t{ title: \"ShortName\", value: voiceDetails.ShortName },\r\n\t\t{ title: \"Locale\", value: voiceDetails.Locale },\r\n\t\t{ title: \"LocaleName\", value: voiceDetails.LocaleName },\r\n\t\t{ title: \"Gender\", value: voiceDetails.Gender },\r\n\t\t{ title: \"VoiceType\", value: voiceDetails.VoiceType },\r\n\t\t{ title: \"Status\", value: voiceDetails.Status },\r\n\t\t{ title: \"SampleRateHertz\", value: voiceDetails.SampleRateHertz },\r\n\t\t{ title: \"WordsPerMinute\", value: voiceDetails.WordsPerMinute },\r\n\t\t{ title: \"StyleList\", value: voiceDetails.StyleList?.join(\", \") },\r\n\t].filter((item) => item.value && item.value !== \"\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={styles.avatarWrapper}>\r\n\t\t\t\t<Avatar className={styles.avatar} src={voiceDetails.avatarUri} />\r\n\t\t\t</div>\r\n\t\t\t<Title level={2}>{voiceDetails.DisplayName}</Title>\r\n\t\t\t<List\r\n\t\t\t\titemLayout=\"horizontal\"\r\n\t\t\t\tdataSource={voiceDetailsList}\r\n\t\t\t\trenderItem={(item) => (\r\n\t\t\t\t\t<List.Item className={styles.listItem}>\r\n\t\t\t\t\t\t<List.Item.Meta title={item.title} description={item.value} />\r\n\t\t\t\t\t</List.Item>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\r\n\t\t\t<Divider />\r\n\t\t\t<div className={styles.audioWrapper}>\r\n\t\t\t\t<audio className={styles.audio} src={voiceDetails.audioUri} controls>\r\n\t\t\t\t\tYour browser does not support the audio element.\r\n\t\t\t\t</audio>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default VoiceCard;\r\n","import { IUserSpeechConfig } from 'models/UserSpeechConfig';\r\nimport ApiManager from './ApiManager';\r\n\r\nclass UserSpeechConfigService {\r\n    private apiManager = ApiManager.getInstance();\r\n\r\n    public async updateUserSpeechConfig(userSpeechConfig: IUserSpeechConfig): Promise<void> {\r\n        await this.apiManager.getAxiosInstance().put('/api/UserSpeechConfig', userSpeechConfig);\r\n    }\r\n}\r\n\r\nconst userSpeechConfigServiceInstance = new UserSpeechConfigService();\r\nexport default userSpeechConfigServiceInstance;","import React, { useEffect, useState } from \"react\";\r\nimport { Select, message } from \"antd\";\r\nimport styles from \"./VoiceSelection.module.scss\";\r\nimport voicesData from \"../data/voices.json\";\r\nimport { VoiceModel } from \"models/VoiceModel\";\r\nimport VoiceCard from \"./VoiceCard\";\r\nimport { Button } from \"antd\";\r\nimport UserSpeechConfigService from \"../services/UserSpeechConfigService\";\r\nimport { IUserSpeechConfig } from \"models/UserSpeechConfig\";\r\n\r\nconst { Option } = Select;\r\n\r\ninterface VoiceSelectionProps {\r\n\tonSelectionChange?: (displayName: string, locale: string) => void;\r\n}\r\n\r\nconst VoiceSelection: React.FC<VoiceSelectionProps> = ({\r\n\tonSelectionChange,\r\n}) => {\r\n\tconst [voices, setVoices] = useState<VoiceModel[]>([]);\r\n\tconst [selectedLocale, setSelectedLocale] = useState<string | undefined>();\r\n\tconst [selectedGender, setSelectedGender] = useState<string | undefined>();\r\n\tconst [selectedVoice, setSelectedVoice] = useState<string | undefined>();\r\n\tconst [voiceDetails, setVoiceDetails] = useState<VoiceModel | undefined>(\r\n\t\tundefined\r\n\t);\r\n\tuseEffect(() => {\r\n\t\tsetVoices(voicesData as VoiceModel[]);\r\n\t\tconst defaultVoice = voicesData.find(\r\n\t\t\t(voice) => voice.ShortName === \"zh-CN-XiaochenNeural\"\r\n\t\t);\r\n\r\n\t\t// When defaultVoice changes, update other state variables\r\n\t\tif (defaultVoice) {\r\n\t\t\tsetSelectedLocale(defaultVoice.Locale);\r\n\t\t\tsetSelectedGender(defaultVoice.Gender);\r\n\t\t\tsetSelectedVoice(defaultVoice.Name);\r\n\t\t\tsetVoiceDetails(defaultVoice);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst saveConfig = async () => {\r\n\t\tif (!selectedVoice || !selectedLocale) {\r\n\t\t\tmessage.error(\"Voice and locale must be selected.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst userSpeechConfig: IUserSpeechConfig = {\r\n\t\t\tid: 1, // This should be set according to your application's logic\r\n\t\t\tuserId: 1, // This should be set according to your application's logic\r\n\t\t\tcharacterLimit: 2000, // This should be set according to your application's logic\r\n\t\t\tvoice: selectedVoice,\r\n\t\t\tlanguage: selectedLocale,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait UserSpeechConfigService.updateUserSpeechConfig(userSpeechConfig);\r\n\t\t\tmessage.success(\"User speech configuration updated successfully!\");\r\n\t\t} catch (e) {\r\n\t\t\tmessage.error(\r\n\t\t\t\t\"There was an error while updating the user speech configuration.\"\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst localeChangeHandler = (value: string) => {\r\n\t\tsetSelectedLocale(value);\r\n\t\tsetSelectedGender(undefined);\r\n\t\tsetSelectedVoice(undefined);\r\n\t\tsetVoiceDetails(undefined);\r\n\t};\r\n\r\n\tconst genderChangeHandler = (value: string) => {\r\n\t\tsetSelectedGender(value);\r\n\t\tsetSelectedVoice(undefined);\r\n\t\tsetVoiceDetails(undefined);\r\n\t};\r\n\r\n\tconst voiceChangeHandler = (value: string) => {\r\n\t\tsetSelectedVoice(value);\r\n\t\tconst voice = voices.find((v) => v.Name === value);\r\n\t\tsetVoiceDetails(voice);\r\n\t\tif (voice && onSelectionChange) {\r\n\t\t\tonSelectionChange(voice.DisplayName, voice.Locale);\r\n\t\t}\r\n\t};\r\n\r\n\tconst locales = Array.from(new Set(voices.map((voice) => voice.Locale)));\r\n\tconst filteredGenders = Array.from(\r\n\t\tnew Set(\r\n\t\t\tvoices\r\n\t\t\t\t.filter((voice) => voice.Locale === selectedLocale)\r\n\t\t\t\t.map((voice) => voice.Gender)\r\n\t\t)\r\n\t);\r\n\tconst filteredVoices = voices.filter(\r\n\t\t(voice) =>\r\n\t\t\tvoice.Locale === selectedLocale && voice.Gender === selectedGender\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={styles.selection}>\r\n\t\t\t<Select\r\n\t\t\t\tplaceholder=\"Select locale\"\r\n\t\t\t\tonChange={localeChangeHandler}\r\n\t\t\t\tvalue={selectedLocale}\r\n\t\t\t\tshowSearch\r\n\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t>\r\n\t\t\t\t{locales.map((locale, index) => (\r\n\t\t\t\t\t<Option key={index} value={locale}>\r\n\t\t\t\t\t\t{voices.find((v) => v.Locale === locale)?.LocaleName}\r\n\t\t\t\t\t</Option>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t\t<Select\r\n\t\t\t\tplaceholder=\"Select gender\"\r\n\t\t\t\tonChange={genderChangeHandler}\r\n\t\t\t\tvalue={selectedGender}\r\n\t\t\t\tshowSearch\r\n\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\tdisabled={!selectedLocale}\r\n\t\t\t>\r\n\t\t\t\t{filteredGenders.map((gender, index) => (\r\n\t\t\t\t\t<Option key={index} value={gender}>\r\n\t\t\t\t\t\t{gender}\r\n\t\t\t\t\t</Option>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t\t<Select\r\n\t\t\t\tplaceholder=\"Select voice\"\r\n\t\t\t\tonChange={voiceChangeHandler}\r\n\t\t\t\tvalue={selectedVoice}\r\n\t\t\t\tshowSearch\r\n\t\t\t\toptionFilterProp=\"children\"\r\n\t\t\t\tdisabled={!selectedGender}\r\n\t\t\t>\r\n\t\t\t\t{filteredVoices.map((voice, index) => (\r\n\t\t\t\t\t<Option key={index} value={voice.Name}>\r\n\t\t\t\t\t\t{voice.DisplayName}\r\n\t\t\t\t\t</Option>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t\t{voiceDetails && <VoiceCard voiceDetails={voiceDetails} />}\r\n\r\n\t\t\t<Button\r\n\t\t\t\ttype=\"primary\"\r\n\t\t\t\tonClick={saveConfig}\r\n\t\t\t\tdisabled={!selectedVoice || !selectedLocale}\r\n\t\t\t>\r\n\t\t\t\tSave Configuration\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default VoiceSelection;\r\n","// TextToSpeechPage.tsx\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Input, message, List, Collapse, Space } from \"antd\";\r\nimport styles from \"./TextToSpeechPage.module.scss\";\r\nimport TextToSpeechService from \"services/TextToSpeechService\";\r\nimport VoiceSelection from \"components/VoiceSelection\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport IndexedDBService from \"data/IndexedDBService\";\r\nimport { SpeechItem } from \"models/SpeechItem\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst TextToSpeechPage: React.FC = () => {\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [streamLoading] = useState(false);\r\n\tconst [speechItems, setSpeechItems] = useState<SpeechItem[]>([]);\r\n\tconst textToSpeechService = TextToSpeechService.getInstance();\r\n\tconst { Panel } = Collapse;\r\n\tconst [selectedVoiceDisplayName, setSelectedVoiceDisplayName] =\r\n\t\tuseState(\"Xiaochen\");\r\n\tconst [selectedLocaleName, setSelectedLocaleName] = useState(\"zh-CN\");\r\n\r\n\tconst [audioQueue, setAudioQueue] = useState<string[]>([]);\r\n\tconst [isPlaying, setIsPlaying] = useState(false);\r\n\r\n\tconst handleAudioData = useCallback(\r\n\t\t(audioData: string, receivedText: string | undefined) => {\r\n\t\t\tconst audioBlob = new Blob(\r\n\t\t\t\t[Uint8Array.from(atob(audioData), (c) => c.charCodeAt(0))],\r\n\t\t\t\t{ type: \"audio/wav\" }\r\n\t\t\t);\r\n\t\t\tconst audioUrl = URL.createObjectURL(audioBlob);\r\n\r\n\t\t\tif (receivedText === undefined) {\r\n\t\t\t\tsetSpeechItems((prev) => [...prev, { text: text, audioUrl }]);\r\n\t\t\t} else {\r\n\t\t\t\tsetSpeechItems((prev) => [...prev, { text: receivedText, audioUrl }]);\r\n\t\t\t}\r\n\r\n\t\t\tsetText(\"\");\r\n\t\t\tmessage.success(\"Audio conversion successful!\");\r\n\t\t\tsetLoading(false);\r\n\r\n\t\t\t// Add the audio URL to the queue\r\n\t\t\tsetAudioQueue((prev) => [...prev, audioUrl]);\r\n\t\t},\r\n\t\t[text]\r\n\t);\r\n\r\n\t// Function to play audio from queue\r\n\tconst playAudioFromQueue = useCallback(() => {\r\n\t\tif (audioQueue.length > 0 && !isPlaying) {\r\n\t\t\tconst audioUrl = audioQueue[0]; // get the first URL\r\n\t\t\tconst audio = new Audio(audioUrl);\r\n\r\n\t\t\tsetIsPlaying(true);\r\n\r\n\t\t\taudio.onended = () => {\r\n\t\t\t\tsetIsPlaying(false);\r\n\t\t\t\t// Remove played audio from queue\r\n\t\t\t\tsetAudioQueue((prev) => prev.slice(1));\r\n\t\t\t};\r\n\r\n\t\t\taudio.play();\r\n\t\t}\r\n\t}, [audioQueue, isPlaying]);\r\n\r\n\t// Effect to play audio when queue changes\r\n\tuseEffect(() => {\r\n\t\tplayAudioFromQueue();\r\n\t}, [audioQueue, playAudioFromQueue, isPlaying]);\r\n\r\n\t// Effect to play audio when queue changes\r\n\tuseEffect(() => {\r\n\t\tplayAudioFromQueue();\r\n\t}, [audioQueue, playAudioFromQueue]);\r\n\r\n\tconst handleError = (errorMessage: string) => {\r\n\t\tconsole.error(\"Error converting text to speech:\", errorMessage);\r\n\t\tmessage.error(\"Error converting text to speech. Please try again.\");\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst handleConvertClick = () => {\r\n\t\tsetLoading(true);\r\n\t\ttextToSpeechService.convertToSpeech(text);\r\n\t};\r\n\r\n\tconst handlePlayClick = (audioUrl: string) => {\r\n\t\tconst audio = new Audio(audioUrl);\r\n\t\taudio.play();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchSpeechItems = async () => {\r\n\t\t\tconst savedSpeechItems =\r\n\t\t\t\tawait IndexedDBService.getInstance().getAudioData();\r\n\r\n\t\t\tif (savedSpeechItems) {\r\n\t\t\t\tconst speechItems = savedSpeechItems.map((item) => {\r\n\t\t\t\t\tconst audioBlob = new Blob([item.audioData], { type: \"audio/wav\" });\r\n\t\t\t\t\tconst audioUrl = URL.createObjectURL(audioBlob);\r\n\t\t\t\t\treturn { text: item.text, audioUrl };\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetSpeechItems(speechItems);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchSpeechItems();\r\n\r\n\t\ttextToSpeechService.onReceiveAudioData(handleAudioData);\r\n\t\ttextToSpeechService.onReceiveError(handleError);\r\n\r\n\t\treturn () => {\r\n\t\t\ttextToSpeechService.offReceiveAudioData(handleAudioData);\r\n\t\t\ttextToSpeechService.offReceiveError(handleError);\r\n\t\t};\r\n\t}, [handleAudioData, textToSpeechService]);\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Space direction=\"vertical\" size=\"large\">\r\n\t\t\t\t<Collapse>\r\n\t\t\t\t\t<Panel\r\n\t\t\t\t\t\theader={`Voice Selection - ${selectedVoiceDisplayName}, ${selectedLocaleName}`}\r\n\t\t\t\t\t\tkey=\"1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className={styles.panelContent}>\r\n\t\t\t\t\t\t\t<VoiceSelection\r\n\t\t\t\t\t\t\t\tonSelectionChange={(displayName, locale) => {\r\n\t\t\t\t\t\t\t\t\tsetSelectedVoiceDisplayName(displayName);\r\n\t\t\t\t\t\t\t\t\tsetSelectedLocaleName(locale);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t<div className={styles.inputSection}>\r\n\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"Enter text here...\"\r\n\t\t\t\t\t\tclassName={styles.textArea}\r\n\t\t\t\t\t\tautoSize={{ minRows: 2, maxRows: 15 }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\tonClick={handleConvertClick}\r\n\t\t\t\t\t\tclassName={styles.button}\r\n\t\t\t\t\t\tdisabled={loading || streamLoading}\r\n\t\t\t\t\t\tloading={loading || streamLoading}\r\n\t\t\t\t\t\ticon={<SendOutlined />}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSend\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<List\r\n\t\t\t\t\tclassName={styles.messageList}\r\n\t\t\t\t\titemLayout=\"horizontal\"\r\n\t\t\t\t\tdataSource={speechItems}\r\n\t\t\t\t\trenderItem={(item) => (\r\n\t\t\t\t\t\t<List.Item className={styles.messageItem}>\r\n\t\t\t\t\t\t\t<List.Item.Meta title={item.text} />\r\n\t\t\t\t\t\t\t<Space>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => handlePlayClick(item.audioUrl!)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPlay\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={item.audioUrl}\r\n\t\t\t\t\t\t\t\t\tdownload={`${item.text}.wav`}\r\n\t\t\t\t\t\t\t\t\tclassName={styles.downloadButton}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"primary\">Download</Button>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Space>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TextToSpeechPage;\r\n"],"names":["Title","Typography","_ref","_voiceDetails$StyleLi","voiceDetails","voiceDetailsList","title","value","ShortName","Locale","LocaleName","Gender","VoiceType","Status","SampleRateHertz","WordsPerMinute","StyleList","join","filter","item","_jsxs","_Fragment","children","_jsx","className","styles","Avatar","src","avatarUri","level","DisplayName","List","itemLayout","dataSource","renderItem","description","Divider","audioUri","controls","UserSpeechConfigService","_classCallCheck","apiManager","ApiManager","_createClass","key","_updateUserSpeechConfig","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userSpeechConfig","wrap","_context","prev","next","this","getAxiosInstance","put","stop","_x","apply","arguments","Option","Select","onSelectionChange","_useState","useState","_useState2","_slicedToArray","voices","setVoices","_useState3","_useState4","selectedLocale","setSelectedLocale","_useState5","_useState6","selectedGender","setSelectedGender","_useState7","_useState8","selectedVoice","setSelectedVoice","_useState9","undefined","_useState10","setVoiceDetails","useEffect","voicesData","defaultVoice","voice","Name","saveConfig","_ref2","message","abrupt","id","userId","characterLimit","language","t0","locales","Array","from","Set","map","filteredGenders","filteredVoices","placeholder","onChange","showSearch","optionFilterProp","locale","index","_voices$find","find","v","disabled","gender","VoiceCard","Button","type","onClick","TextArea","Input","text","setText","loading","setLoading","streamLoading","speechItems","setSpeechItems","textToSpeechService","TextToSpeechService","Panel","Collapse","selectedVoiceDisplayName","setSelectedVoiceDisplayName","_useState11","_useState12","selectedLocaleName","setSelectedLocaleName","_useState13","_useState14","audioQueue","setAudioQueue","_useState15","_useState16","isPlaying","setIsPlaying","handleAudioData","useCallback","audioData","receivedText","audioBlob","Blob","Uint8Array","atob","c","charCodeAt","audioUrl","URL","createObjectURL","concat","_toConsumableArray","playAudioFromQueue","length","audio","Audio","onended","slice","play","handleError","errorMessage","console","error","fetchSpeechItems","savedSpeechItems","_speechItems","IndexedDBService","getAudioData","sent","onReceiveAudioData","onReceiveError","offReceiveAudioData","offReceiveError","Space","direction","size","header","VoiceSelection","displayName","e","target","autoSize","minRows","maxRows","convertToSpeech","icon","SendOutlined","href","download"],"sourceRoot":""}